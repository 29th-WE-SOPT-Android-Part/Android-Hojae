// Generated by data binding compiler. Do not edit!
package com.example.androidseminar.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.androidseminar.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivitySigninBinding extends ViewDataBinding {
  @NonNull
  public final EditText idEditText;

  @NonNull
  public final Button loginButton;

  @NonNull
  public final TextView nameTextview;

  @NonNull
  public final EditText pwEditText;

  @NonNull
  public final TextView pwTextview;

  @NonNull
  public final Button signupButton;

  @NonNull
  public final TextView subTitleTextview;

  @NonNull
  public final TextView titleTextview;

  protected ActivitySigninBinding(Object _bindingComponent, View _root, int _localFieldCount,
      EditText idEditText, Button loginButton, TextView nameTextview, EditText pwEditText,
      TextView pwTextview, Button signupButton, TextView subTitleTextview, TextView titleTextview) {
    super(_bindingComponent, _root, _localFieldCount);
    this.idEditText = idEditText;
    this.loginButton = loginButton;
    this.nameTextview = nameTextview;
    this.pwEditText = pwEditText;
    this.pwTextview = pwTextview;
    this.signupButton = signupButton;
    this.subTitleTextview = subTitleTextview;
    this.titleTextview = titleTextview;
  }

  @NonNull
  public static ActivitySigninBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_signin, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivitySigninBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivitySigninBinding>inflateInternal(inflater, R.layout.activity_signin, root, attachToRoot, component);
  }

  @NonNull
  public static ActivitySigninBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_signin, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivitySigninBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivitySigninBinding>inflateInternal(inflater, R.layout.activity_signin, null, false, component);
  }

  public static ActivitySigninBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivitySigninBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActivitySigninBinding)bind(component, view, R.layout.activity_signin);
  }
}
