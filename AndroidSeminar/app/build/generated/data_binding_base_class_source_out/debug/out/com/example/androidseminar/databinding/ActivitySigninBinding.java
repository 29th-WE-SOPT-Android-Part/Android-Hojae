// Generated by view binder compiler. Do not edit!
package com.example.androidseminar.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.androidseminar.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySigninBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText idEditText;

  @NonNull
  public final Button loginButton;

  @NonNull
  public final TextView nameTextview;

  @NonNull
  public final EditText pwEditText;

  @NonNull
  public final TextView pwTextview;

  @NonNull
  public final Button signupButton;

  @NonNull
  public final TextView subTitleTextview;

  @NonNull
  public final TextView titleTextview;

  private ActivitySigninBinding(@NonNull ConstraintLayout rootView, @NonNull EditText idEditText,
      @NonNull Button loginButton, @NonNull TextView nameTextview, @NonNull EditText pwEditText,
      @NonNull TextView pwTextview, @NonNull Button signupButton,
      @NonNull TextView subTitleTextview, @NonNull TextView titleTextview) {
    this.rootView = rootView;
    this.idEditText = idEditText;
    this.loginButton = loginButton;
    this.nameTextview = nameTextview;
    this.pwEditText = pwEditText;
    this.pwTextview = pwTextview;
    this.signupButton = signupButton;
    this.subTitleTextview = subTitleTextview;
    this.titleTextview = titleTextview;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySigninBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySigninBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_signin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySigninBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.id_edit_text;
      EditText idEditText = rootView.findViewById(id);
      if (idEditText == null) {
        break missingId;
      }

      id = R.id.login_button;
      Button loginButton = rootView.findViewById(id);
      if (loginButton == null) {
        break missingId;
      }

      id = R.id.name_textview;
      TextView nameTextview = rootView.findViewById(id);
      if (nameTextview == null) {
        break missingId;
      }

      id = R.id.pw_edit_text;
      EditText pwEditText = rootView.findViewById(id);
      if (pwEditText == null) {
        break missingId;
      }

      id = R.id.pw_textview;
      TextView pwTextview = rootView.findViewById(id);
      if (pwTextview == null) {
        break missingId;
      }

      id = R.id.signup_button;
      Button signupButton = rootView.findViewById(id);
      if (signupButton == null) {
        break missingId;
      }

      id = R.id.sub_title_textview;
      TextView subTitleTextview = rootView.findViewById(id);
      if (subTitleTextview == null) {
        break missingId;
      }

      id = R.id.title_textview;
      TextView titleTextview = rootView.findViewById(id);
      if (titleTextview == null) {
        break missingId;
      }

      return new ActivitySigninBinding((ConstraintLayout) rootView, idEditText, loginButton,
          nameTextview, pwEditText, pwTextview, signupButton, subTitleTextview, titleTextview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
